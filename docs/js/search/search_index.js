var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/BaseComponent.html",[0,0.035,1,1.254]],["body/classes/BaseComponent.html",[0,0.054,1,1.214,2,0.371,3,0.371,4,0.299,5,0.606,6,0.451,7,0.451,8,1.172,9,0.952,10,2.322,11,3.184,12,2.213,13,3.043,14,3.043,15,4.447,16,4.17,17,2.322,18,2.322,19,2.322,20,2.322,21,2.322,22,2.322,23,2.471,24,2.478,25,2.322,26,2.322,27,2.322,28,3.184,29,2.828,30,3.184,31,3.184,32,2.322,33,2.322,34,2.322,35,0.072,36,2.322,37,1.214,38,1.467,39,2.536,40,2.322,41,2.322,42,2.322,43,2.322,44,2.471,45,1.467,46,2.322,47,2.833,48,2.322,49,2.322,50,2.322,51,2.322,52,1.506,53,0.299,54,0.699,55,2.297,56,3.184,57,3.184,58,1.807,59,3.184,60,3.184,61,1.65,62,2.322,63,1.387,64,1.506,65,3.184,66,3.787,67,1.506,68,2.322,69,1.506,70,1.506,71,1.012,72,1.807,73,1.506,74,0.573,75,0.656,76,0.787,77,1.506,78,1.506,79,1.506,80,0.299,81,1.506,82,1.506,83,1.214,84,2.322,85,1.506,86,1.506,87,1.506,88,1.506,89,1.506,90,1.506,91,1.506,92,1.506,93,1.506,94,0.034,95,0.034]],["title/interfaces/ControlWithName.html",[96,0.591,97,1.254]],["body/interfaces/ControlWithName.html",[0,0.026,2,0.429,3,0.429,4,0.345,5,0.269,6,0.2,7,0.2,35,0.073,53,0.345,54,0.779,63,1.127,71,1.127,74,0.429,80,0.811,94,0.038,95,0.038,96,0.638,97,1.617,98,0.908,99,2.816,100,1.596,101,2.665,102,1.791,103,2.33,104,2.013,105,2.908,106,1.098,107,1.733,108,2.427,109,1.098,110,1.352,111,1.352,112,1.352,113,1.352,114,1.352,115,2.013,116,1.352,117,1.352,118,2.687,119,2.315,120,2.315,121,2.315,122,1.635,123,2.008,124,2.315,125,1.098,126,1.352,127,1.954,128,1.098,129,1.352,130,1.954,131,1.098,132,1.352,133,1.635,134,1.098,135,1.352,136,1.635,137,1.098,138,1.352,139,0.757,140,1.098,141,1.098,142,1.352,143,1.352,144,1.352,145,1.352,146,1.352,147,1.352,148,0.757,149,1.395,150,1.353,151,1.353,152,1.353,153,1.353,154,1.353,155,1.353]],["title/classes/FormHelper.html",[0,0.035,148,1.045]],["body/classes/FormHelper.html",[0,0.034,2,0.375,3,0.375,4,0.302,5,0.589,6,0.439,7,0.439,35,0.072,53,0.302,54,0.705,61,1.59,71,1.02,74,0.375,80,0.778,94,0.034,95,0.034,96,0.375,97,1.224,98,0.796,99,2.642,100,1.02,101,1.821,102,1.224,103,2.271,104,1.821,105,2.852,106,0.962,107,1.656,108,2.307,109,0.962,110,1.184,111,1.184,112,1.184,113,1.184,114,1.184,115,1.821,116,1.184,117,1.184,118,2.597,119,2.184,120,2.184,121,2.184,122,1.479,123,1.908,124,2.184,125,0.962,126,1.184,127,1.803,128,0.962,129,1.184,130,1.803,131,0.962,132,1.184,133,1.479,134,0.962,135,1.184,136,1.479,137,0.962,138,1.184,139,0.663,140,0.962,141,0.962,142,1.184,143,1.184,144,1.184,145,1.184,146,1.184,147,1.184,148,1.02,149,1.629,150,1.908,151,1.908,152,1.908,153,1.908,154,1.908,155,1.908,156,1.59,157,1.908,158,1.522,159,1.522,160,1.522,161,1.522,162,1.522,163,1.522]],["title/classes/Helper.html",[0,0.035,164,1.045]],["body/classes/Helper.html",[0,0.058,2,0.795,3,0.795,4,0.64,5,0.61,6,0.455,7,0.455,35,0.07,53,0.64,54,1.186,61,1.405,74,0.795,80,0.64,94,0.058,95,0.058,103,2.377,148,1.854,149,1.545,156,1.405,157,1.686,164,1.717,165,2.509,166,3.224]],["title/interfaces/PubSubData.html",[96,0.591,167,1.254]],["body/interfaces/PubSubData.html",[0,0.03,2,0.503,3,0.503,4,0.404,5,0.316,6,0.235,7,0.235,12,1.066,23,1.288,35,0.072,39,1.837,44,1.288,45,1.288,53,0.404,54,0.875,55,1.837,63,1.267,71,1.476,74,0.836,75,0.888,76,1.066,80,0.577,83,1.066,94,0.043,95,0.043,96,0.717,100,1.267,102,1.066,123,2.123,139,0.888,149,0.74,156,0.888,167,1.772,168,1.288,169,1.288,170,3.607,171,3.607,172,1.586,173,1.586,174,1.586,175,1.267,176,2.875,177,1.586,178,1.586,179,1.586,180,1.586,181,1.288,182,1.586,183,1.586,184,1.586,185,2.142,186,2.875,187,0.888,188,1.586,189,1.586,190,2.262,191,1.586,192,1.586,193,1.586,194,1.586,195,1.586,196,1.586,197,1.586,198,1.586,199,1.586,200,1.586,201,2.262,202,2.637,203,2.637,204,1.586,205,2.262,206,1.586,207,2.262,208,1.586,209,1.586,210,1.586,211,1.586,212,1.586,213,1.586,214,1.586,215,1.586,216,1.586,217,1.586,218,1.586,219,1.586,220,1.586,221,1.586,222,1.586]],["title/injectables/PubSubService.html",[175,1.045,187,1.045]],["body/injectables/PubSubService.html",[0,0.022,2,0.375,3,0.375,4,0.302,5,0.589,6,0.439,7,0.439,9,1.803,12,0.796,23,1.479,35,0.072,39,1.803,44,1.803,45,1.479,53,0.302,54,0.705,55,2.307,58,1.821,61,1.59,63,1.59,71,1.59,72,1.821,74,0.704,75,0.663,76,0.796,80,0.464,83,0.796,94,0.034,95,0.034,96,0.375,100,1.656,102,1.807,123,1.908,139,1.02,149,1.036,156,1.395,157,1.224,167,1.224,168,2.403,169,0.962,170,3.531,171,3.606,172,1.184,173,1.184,174,1.184,175,1.243,176,3.132,177,1.184,178,1.184,179,1.184,180,1.184,181,0.962,182,1.184,183,1.184,184,1.184,185,2.184,186,2.958,187,1.02,188,2.492,189,1.821,190,1.821,191,1.184,192,1.184,193,1.184,194,1.184,195,1.184,196,1.184,197,1.184,198,1.184,199,1.184,200,1.184,201,1.821,202,3.053,203,2.689,204,1.821,205,2.492,206,1.821,207,2.492,208,1.821,209,1.184,210,1.184,211,1.184,212,1.821,213,1.184,214,1.821,215,1.821,216,1.821,217,1.821,218,1.821,219,1.184,220,1.184,221,1.184,222,1.184,223,2.341,224,2.341,225,1.522,226,2.492,227,2.219,228,2.341,229,1.522,230,1.522,231,1.522,232,1.522]],["title/classes/SwissArmyKnife.html",[0,0.035,233,1.515]],["body/classes/SwissArmyKnife.html",[0,0.051,1,2.334,2,0.643,3,0.643,4,0.517,5,0.635,6,0.492,7,0.492,35,0.071,53,0.517,54,1.036,61,1.68,74,0.951,80,0.845,94,0.051,95,0.051,149,1.665,156,1.68,157,2.015,164,1.945,187,1.945,233,2.176,234,2.029,235,2.608,236,2.608,237,2.608,238,3.443,239,3.443,240,3.443,241,3.443,242,2.608,243,2.608]],["title/modules/SwissArmyKnifeModule.html",[244,1.045,245,1.515]],["body/modules/SwissArmyKnifeModule.html",[0,0.049,2,0.823,3,0.823,4,0.662,5,0.517,6,0.464,7,0.464,35,0.071,74,0.992,75,1.454,80,0.798,94,0.059,95,0.059,244,1.454,245,2.543,246,3.337,247,3.337,248,4.023,249,2.596]],["title/coverage.html",[250,2.533]],["body/coverage.html",[0,0.058,1,1.236,4,0.469,5,0.725,6,0.54,7,0.54,8,1.839,35,0.07,63,1.03,83,1.236,94,0.047,95,0.047,96,0.795,97,1.236,98,2.35,107,1.897,148,1.03,150,1.236,151,1.236,152,1.236,153,1.236,154,1.236,155,1.236,164,1.03,165,1.839,167,1.236,168,2.037,169,2.037,175,1.03,187,1.03,233,1.494,234,1.839,250,1.839,251,1.839,252,2.364,253,2.364,254,2.364,255,2.364,256,4.255,257,2.364,258,3.223,259,1.839,260,2.364,261,4.255,262,4.255,263,2.364,264,2.364,265,2.364,266,2.364,267,2.364,268,2.364]],["title/dependencies.html",[37,1.505,269,2.011]],["body/dependencies.html",[35,0.072,37,1.679,75,1.4,76,1.679,94,0.058,95,0.058,106,2.03,185,2.485,270,3.212,271,4.725,272,3.212,273,3.212,274,3.931,275,3.212,276,3.212,277,3.212,278,3.212,279,3.212,280,3.212,281,3.212,282,3.212,283,3.212,284,3.212]],["title/miscellaneous/functions.html",[107,1.254,285,1.565]],["body/miscellaneous/functions.html",[5,0.357,6,0.266,7,0.266,9,2.669,35,0.066,53,0.458,94,0.047,95,0.047,98,1.206,99,2.734,100,1.885,103,2.426,105,2.888,107,1.005,108,1.458,109,2.003,118,2.86,119,2.584,120,2.584,121,2.584,122,2.003,124,2.584,125,1.458,127,2.289,128,1.458,130,2.289,131,1.458,133,2.003,134,1.458,136,2.003,137,1.458,139,1.005,140,1.458,141,1.458,150,1.657,151,1.657,152,1.657,153,1.657,154,1.657,155,1.657,226,3.367,227,3.367,259,2.467,285,1.795,286,4.326]],["title/index.html",[29,1.565,53,0.399,287,2.011]],["body/index.html",[6,0.448,7,0.448,12,1.643,13,3.274,14,2.445,24,2.445,35,0.062,38,1.986,94,0.057,95,0.057,164,1.369,181,1.986,251,2.445,288,3.142,289,3.878,290,3.142,291,3.142,292,3.142,293,3.142,294,3.878,295,3.878,296,3.878,297,3.142,298,3.142,299,3.142,300,3.142,301,3.142,302,3.142,303,3.142,304,3.142,305,3.142,306,3.142,307,3.142,308,3.142,309,3.142,310,3.142,311,3.142,312,3.142,313,3.142,314,3.142,315,3.142]],["title/modules.html",[244,1.418]],["body/modules.html",[35,0.063,94,0.063,95,0.063,244,1.617,245,2.346,316,3.712,317,3.712,318,3.712]],["title/overview.html",[319,2.533]],["body/overview.html",[0,0.051,35,0.061,37,1.823,38,2.203,80,0.691,94,0.061,95,0.061,96,0.86,175,1.519,244,1.799,249,2.712,319,2.712,320,3.486,321,3.486,322,4.13,323,3.486,324,3.486,325,4.13,326,3.486,327,3.486]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":325,"title":{},"body":{"overview.html":{}}}],["1.9.0",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":327,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":326,"title":{},"body":{"overview.html":{}}}],["42",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["__crosstabcommun",{"_index":189,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["abstract",{"_index":81,"title":{},"body":{"classes/BaseComponent.html":{}}}],["abstractcontrol",{"_index":101,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["access",{"_index":46,"title":{},"body":{"classes/BaseComponent.html":{}}}],["activ",{"_index":206,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["and/or",{"_index":184,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["angular",{"_index":13,"title":{},"body":{"classes/BaseComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":75,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"modules/SwissArmyKnifeModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":106,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":312,"title":{},"body":{"index.html":{}}}],["approach",{"_index":26,"title":{},"body":{"classes/BaseComponent.html":{}}}],["armi",{"_index":7,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["asobservable().pip",{"_index":219,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["avail",{"_index":317,"title":{},"body":{"modules.html":{}}}],["base",{"_index":11,"title":{},"body":{"classes/BaseComponent.html":{}}}],["basecompon",{"_index":1,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"classes/SwissArmyKnife.html":{},"coverage.html":{}}}],["best",{"_index":25,"title":{},"body":{"classes/BaseComponent.html":{}}}],["between",{"_index":183,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["bootstrap",{"_index":321,"title":{},"body":{"overview.html":{}}}],["brows",{"_index":318,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"dependencies.html":{}}}],["c.control.dirti",{"_index":147,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["call",{"_index":18,"title":{},"body":{"classes/BaseComponent.html":{}}}],["callfunconformgroupandchildren",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["callfunconformgroupandchildren(formgroup",{"_index":108,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["cann",{"_index":42,"title":{},"body":{"classes/BaseComponent.html":{}}}],["check",{"_index":140,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["child",{"_index":21,"title":{},"body":{"classes/BaseComponent.html":{}}}],["children",{"_index":120,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":0,"title":{"classes/BaseComponent.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"classes/SwissArmyKnife.html":{}},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"overview.html":{}}}],["click",{"_index":313,"title":{},"body":{"index.html":{}}}],["common",{"_index":290,"title":{},"body":{"index.html":{}}}],["commun",{"_index":182,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["compon",{"_index":12,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"index.html":{}}}],["console.log(this.somevar",{"_index":79,"title":{},"body":{"classes/BaseComponent.html":{}}}],["const",{"_index":197,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["control",{"_index":99,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["control[nameoffunc",{"_index":116,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["controlwithnam",{"_index":97,"title":{"interfaces/ControlWithName.html":{}},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{}}}],["core",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":250,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":205,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["d",{"_index":298,"title":{},"body":{"index.html":{}}}],["data",{"_index":198,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["data.messag",{"_index":201,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["declar",{"_index":249,"title":{},"body":{"modules/SwissArmyKnifeModule.html":{},"overview.html":{}}}],["default",{"_index":156,"title":{},"body":{"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{}}}],["defin",{"_index":61,"title":{},"body":{"classes/BaseComponent.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{}}}],["depend",{"_index":37,"title":{"dependencies.html":{}},"body":{"classes/BaseComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/PubSubService.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":30,"title":{},"body":{"classes/BaseComponent.html":{}}}],["develop",{"_index":297,"title":{},"body":{"index.html":{}}}],["differ",{"_index":294,"title":{},"body":{"index.html":{}}}],["direct",{"_index":292,"title":{},"body":{"index.html":{}}}],["dirti",{"_index":130,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["document",{"_index":251,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":40,"title":{},"body":{"classes/BaseComponent.html":{}}}],["dynam",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":31,"title":{},"body":{"classes/BaseComponent.html":{}}}],["emit",{"_index":65,"title":{},"body":{"classes/BaseComponent.html":{}}}],["event",{"_index":192,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["event.key",{"_index":194,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["event.newvalu",{"_index":196,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["exampl",{"_index":52,"title":{},"body":{"classes/BaseComponent.html":{}}}],["export",{"_index":80,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"overview.html":{}}}],["fals",{"_index":207,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{}}}],["filter",{"_index":173,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["filter(c",{"_index":146,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["filter(data",{"_index":220,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["find",{"_index":299,"title":{},"body":{"index.html":{}}}],["first",{"_index":20,"title":{},"body":{"classes/BaseComponent.html":{}}}],["foreach(control",{"_index":114,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["form",{"_index":103,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"miscellaneous/functions.html":{}}}],["form.controls[k",{"_index":144,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["formcontrol",{"_index":104,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["formgroup",{"_index":105,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["formgroup.control",{"_index":110,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["formgroup.controls[formcontrolnam",{"_index":113,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["formhelp",{"_index":148,"title":{"classes/FormHelper.html":{}},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"coverage.html":{}}}],["frequent",{"_index":306,"title":{},"body":{"index.html":{}}}],["full",{"_index":315,"title":{},"body":{"index.html":{}}}],["function",{"_index":107,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["get",{"_index":29,"title":{"index.html":{}},"body":{"classes/BaseComponent.html":{}}}],["getdirtycontrol",{"_index":151,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdirtycontrols(form",{"_index":141,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["graph",{"_index":316,"title":{},"body":{"modules.html":{}}}],["group",{"_index":124,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["helper",{"_index":164,"title":{"classes/Helper.html":{}},"body":{"classes/Helper.html":{},"classes/SwissArmyKnife.html":{},"coverage.html":{},"index.html":{}}}],["here",{"_index":314,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":51,"title":{},"body":{"classes/BaseComponent.html":{}}}],["import",{"_index":74,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{}}}],["includ",{"_index":121,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["includeself",{"_index":203,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{}}}],["initi",{"_index":68,"title":{},"body":{"classes/BaseComponent.html":{}}}],["inject",{"_index":175,"title":{"injectables/PubSubService.html":{}},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":36,"title":{},"body":{"classes/BaseComponent.html":{}}}],["input",{"_index":47,"title":{},"body":{"classes/BaseComponent.html":{}}}],["insid",{"_index":139,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"miscellaneous/functions.html":{}}}],["instal",{"_index":307,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":115,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["interfac",{"_index":96,"title":{"interfaces/ControlWithName.html":{},"interfaces/PubSubData.html":{}},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{},"overview.html":{}}}],["it'",{"_index":119,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["js",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["json.parse(event.newvalu",{"_index":199,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["json.stringify({top",{"_index":210,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["k",{"_index":145,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["knife",{"_index":296,"title":{},"body":{"index.html":{}}}],["knife.modul",{"_index":243,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["knife.module.t",{"_index":247,"title":{},"body":{"modules/SwissArmyKnifeModule.html":{}}}],["knife/src/lib/classes/base.component.t",{"_index":8,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["knife/src/lib/classes/base.component.ts:33",{"_index":67,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/classes/base.component.ts:34",{"_index":69,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/classes/base.component.ts:39",{"_index":64,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/classes/base.component.ts:44",{"_index":62,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/classes/base.component.ts:54",{"_index":73,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/classes/base.component.ts:59",{"_index":70,"title":{},"body":{"classes/BaseComponent.html":{}}}],["knife/src/lib/helper/form.t",{"_index":98,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["knife/src/lib/helper/form.ts:79",{"_index":162,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/form.ts:80",{"_index":158,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/form.ts:81",{"_index":163,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/form.ts:82",{"_index":159,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/form.ts:83",{"_index":161,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/form.ts:84",{"_index":160,"title":{},"body":{"classes/FormHelper.html":{}}}],["knife/src/lib/helper/index.t",{"_index":165,"title":{},"body":{"classes/Helper.html":{},"coverage.html":{}}}],["knife/src/lib/helper/index.ts:4",{"_index":166,"title":{},"body":{"classes/Helper.html":{}}}],["knife/src/lib/ng",{"_index":246,"title":{},"body":{"modules/SwissArmyKnifeModule.html":{}}}],["knife/src/lib/services/pub",{"_index":168,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{}}}],["knife/src/public_api.t",{"_index":234,"title":{},"body":{"classes/SwissArmyKnife.html":{},"coverage.html":{}}}],["knife/src/public_api.ts:15",{"_index":236,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["knife/src/public_api.ts:16",{"_index":237,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["knife/src/public_api.ts:17",{"_index":235,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["know",{"_index":303,"title":{},"body":{"index.html":{}}}],["legend",{"_index":320,"title":{},"body":{"overview.html":{}}}],["lib/classes/base.compon",{"_index":241,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["lib/help",{"_index":238,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["lib/ng",{"_index":242,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["lib/services/pub",{"_index":239,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["librari",{"_index":289,"title":{},"body":{"index.html":{}}}],["lifecycl",{"_index":50,"title":{},"body":{"classes/BaseComponent.html":{}}}],["listen",{"_index":217,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["localstorage.setitem(pubsubservice.localstorage_key",{"_index":209,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["localstorage_key",{"_index":188,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["map",{"_index":172,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["map(data",{"_index":222,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["map(formcontrolnam",{"_index":112,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["map(k",{"_index":143,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["mark",{"_index":118,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["markasdirti",{"_index":132,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["markaspend",{"_index":138,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["markaspristin",{"_index":135,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["markastouch",{"_index":126,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["markasuntouch",{"_index":129,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["markformgroupasdirti",{"_index":153,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["markformgroupasdirty(formgroup",{"_index":131,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["markformgroupaspend",{"_index":155,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["markformgroupaspending(formgroup",{"_index":137,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["markformgroupaspristin",{"_index":154,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["markformgroupaspristine(formgroup",{"_index":134,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["markformgroupastouch",{"_index":150,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["markformgroupastouched(formgroup",{"_index":125,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["markformgroupasuntouch",{"_index":152,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["markformgroupasuntouched(formgroup",{"_index":128,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["match",{"_index":95,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["messag",{"_index":170,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["method",{"_index":58,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/PubSubService.html":{}}}],["miscellan",{"_index":285,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["miss",{"_index":300,"title":{},"body":{"index.html":{}}}],["modul",{"_index":244,"title":{"modules/SwissArmyKnifeModule.html":{},"modules.html":{}},"body":{"modules/SwissArmyKnifeModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":216,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["name",{"_index":100,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"miscellaneous/functions.html":{}}}],["nameoffunc",{"_index":109,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["nearli",{"_index":22,"title":{},"body":{"classes/BaseComponent.html":{}}}],["new",{"_index":83,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{}}}],["ng",{"_index":310,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":248,"title":{},"body":{"modules/SwissArmyKnifeModule.html":{}}}],["ngondestroy",{"_index":59,"title":{},"body":{"classes/BaseComponent.html":{}}}],["ngoninit",{"_index":60,"title":{},"body":{"classes/BaseComponent.html":{}}}],["ngswissarmyknif",{"_index":288,"title":{},"body":{"index.html":{}}}],["npm",{"_index":309,"title":{},"body":{"index.html":{}}}],["object.keys(form.control",{"_index":142,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["object.keys(formgroup.control",{"_index":111,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["observ",{"_index":39,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["on",{"_index":215,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["ondestroy",{"_index":16,"title":{},"body":{"classes/BaseComponent.html":{}}}],["ondestroy$ubject",{"_index":56,"title":{},"body":{"classes/BaseComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"classes/BaseComponent.html":{}}}],["oninit$ubject",{"_index":57,"title":{},"body":{"classes/BaseComponent.html":{}}}],["option",{"_index":227,"title":{},"body":{"injectables/PubSubService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":324,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":269,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":123,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["paramet",{"_index":226,"title":{},"body":{"injectables/PubSubService.html":{},"miscellaneous/functions.html":{}}}],["pend",{"_index":136,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["pipe",{"_index":293,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":302,"title":{},"body":{"index.html":{}}}],["pristin",{"_index":133,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["privat",{"_index":55,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["project",{"_index":295,"title":{},"body":{"index.html":{}}}],["projects/.../form.t",{"_index":286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ng",{"_index":5,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":54,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{}}}],["provid",{"_index":38,"title":{},"body":{"classes/BaseComponent.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":177,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["publish",{"_index":202,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["publish(top",{"_index":212,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["publishcrosstab",{"_index":223,"title":{},"body":{"injectables/PubSubService.html":{}}}],["publishcrosstab(top",{"_index":208,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["pubsub",{"_index":180,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["pubsubdata",{"_index":167,"title":{"interfaces/PubSubData.html":{}},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{}}}],["pubsubservic",{"_index":187,"title":{"injectables/PubSubService.html":{}},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"coverage.html":{}}}],["pubsubservice.localstorage_key",{"_index":195,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["receiv",{"_index":214,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["rememb",{"_index":17,"title":{},"body":{"classes/BaseComponent.html":{}}}],["replaysubject",{"_index":66,"title":{},"body":{"classes/BaseComponent.html":{}}}],["replaysubject(1",{"_index":84,"title":{},"body":{"classes/BaseComponent.html":{}}}],["reset",{"_index":323,"title":{},"body":{"overview.html":{}}}],["result",{"_index":94,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":71,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["root",{"_index":178,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["run",{"_index":308,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":76,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":174,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["save",{"_index":311,"title":{},"body":{"index.html":{}}}],["servic",{"_index":181,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"index.html":{}}}],["set",{"_index":49,"title":{},"body":{"classes/BaseComponent.html":{}}}],["simpl",{"_index":179,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["someth",{"_index":24,"title":{},"body":{"classes/BaseComponent.html":{},"index.html":{}}}],["somevar",{"_index":77,"title":{},"body":{"classes/BaseComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{}}}],["start",{"_index":287,"title":{"index.html":{}},"body":{}}],["statement",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":149,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{}}}],["storageev",{"_index":193,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["string",{"_index":102,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["sub.servic",{"_index":240,"title":{},"body":{"classes/SwissArmyKnife.html":{}}}],["sub.service.t",{"_index":169,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{}}}],["sub.service.ts:18",{"_index":232,"title":{},"body":{"injectables/PubSubService.html":{}}}],["sub.service.ts:19",{"_index":224,"title":{},"body":{"injectables/PubSubService.html":{}}}],["sub.service.ts:44",{"_index":229,"title":{},"body":{"injectables/PubSubService.html":{}}}],["sub.service.ts:56",{"_index":225,"title":{},"body":{"injectables/PubSubService.html":{}}}],["sub.service.ts:64",{"_index":230,"title":{},"body":{"injectables/PubSubService.html":{}}}],["subject",{"_index":176,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["subsclass",{"_index":41,"title":{},"body":{"classes/BaseComponent.html":{}}}],["subscrib",{"_index":23,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["suggest",{"_index":301,"title":{},"body":{"index.html":{}}}],["super.ngoninit",{"_index":19,"title":{},"body":{"classes/BaseComponent.html":{}}}],["swiss",{"_index":6,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"classes/Helper.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{},"modules/SwissArmyKnifeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["swissarmyknif",{"_index":233,"title":{"classes/SwissArmyKnife.html":{}},"body":{"classes/SwissArmyKnife.html":{},"coverage.html":{}}}],["swissarmyknifemodul",{"_index":245,"title":{"modules/SwissArmyKnifeModule.html":{}},"body":{"modules/SwissArmyKnifeModule.html":{},"modules.html":{}}}],["t",{"_index":231,"title":{},"body":{"injectables/PubSubService.html":{}}}],["tab",{"_index":186,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["tabl",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":28,"title":{},"body":{"classes/BaseComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":33,"title":{},"body":{"classes/BaseComponent.html":{}}}],["tap",{"_index":34,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.callfunconformgroupandchildren(control",{"_index":117,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{}}}],["this.ondestroy",{"_index":86,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.ondestroy$ubject",{"_index":82,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.ondestroy$ubject.asobserv",{"_index":87,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.ondestroy$ubject.complet",{"_index":93,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.ondestroy$ubject.next(undefin",{"_index":92,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit",{"_index":88,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$().subscrib",{"_index":78,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$.subscrib",{"_index":43,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$ubject",{"_index":85,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$ubject.asobserv",{"_index":89,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$ubject.complet",{"_index":91,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.oninit$ubject.next(undefin",{"_index":90,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.publish(data.top",{"_index":200,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["this.publish(top",{"_index":211,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["this.subject",{"_index":190,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["this.subject.next({top",{"_index":213,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["timer(1000).pip",{"_index":32,"title":{},"body":{"classes/BaseComponent.html":{}}}],["tool",{"_index":291,"title":{},"body":{"index.html":{}}}],["topic",{"_index":171,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["topic(...top",{"_index":218,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["topics.includes(data.top",{"_index":221,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["touch",{"_index":122,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":204,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["tslib",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":63,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/ControlWithName.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{},"coverage.html":{}}}],["unsubscrib",{"_index":27,"title":{},"body":{"classes/BaseComponent.html":{}}}],["untouch",{"_index":127,"title":{},"body":{"interfaces/ControlWithName.html":{},"classes/FormHelper.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":305,"title":{},"body":{"index.html":{}}}],["us",{"_index":14,"title":{},"body":{"classes/BaseComponent.html":{},"index.html":{}}}],["valu",{"_index":157,"title":{},"body":{"classes/FormHelper.html":{},"classes/Helper.html":{},"injectables/PubSubService.html":{},"classes/SwissArmyKnife.html":{}}}],["variabl",{"_index":48,"title":{},"body":{"classes/BaseComponent.html":{}}}],["veri",{"_index":10,"title":{},"body":{"classes/BaseComponent.html":{}}}],["void",{"_index":72,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/PubSubService.html":{}}}],["want",{"_index":45,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["window.addeventlistener('storag",{"_index":191,"title":{},"body":{"interfaces/PubSubData.html":{},"injectables/PubSubService.html":{}}}],["work",{"_index":304,"title":{},"body":{"index.html":{}}}],["ye",{"_index":228,"title":{},"body":{"injectables/PubSubService.html":{}}}],["zone.j",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":322,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/classes/base.component.ts\n        \n\n            \n                Description\n            \n            \n                This should be the very base component of every angular component\nIt uses OnInit and OnDestroy, so remember to call super.ngOnInit() at first\nif you also use OnInit in the child class\nIn nearly every angular component you will subscribe to something\nand the best approach to unsubscribe is: takeUntil\ntakeUntil the component gets destroyed\ne.g.:\ntimer(1000).pipe(\n  takeUntil(this.onDestroy$),\n  tap(() => do something)\n).subscribe();\nso this base class has no injector dependencies and provide the onDestroy$ and onInit$ observables\nwhich you can subscribe to.\ne.g. you don't have to use OnInit in the subsclass you cann also just\nsubscribe to this.onInit$.subscribe() in the constructor\nit' also useful if you want to access @Input variables which get set\nat in onInit lifecycle and not in the constructor, so:\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onDestroy$\n                            \n                            \n                                    Private\n                                onDestroy$ubject\n                            \n                            \n                                onInit$\n                            \n                            \n                                    Private\n                                onInit$ubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDestroy$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onDestroy$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:39\n                            \n                        \n\n                \n                    \n                        Emits when the angular component gets destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$ubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onDestroy$ubject:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onInit$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onInit$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:44\n                            \n                        \n\n                \n                    \n                        Emits when the angular component gets initialized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onInit$ubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onInit$ubject:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/classes/base.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {OnDestroy, OnInit} from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/**\n * This should be the very base component of every angular component\n * It uses OnInit and OnDestroy, so remember to call super.ngOnInit() at first\n * if you also use OnInit in the child class\n *\n * In nearly every angular component you will subscribe to something\n * and the best approach to unsubscribe is: takeUntil\n * takeUntil the component gets destroyed\n *\n * e.g.:\n * timer(1000).pipe(\n *  takeUntil(this.onDestroy$),\n *  tap(() => do something)\n * ).subscribe();\n *\n * so this base class has no injector dependencies and provide the onDestroy$ and onInit$ observables\n * which you can subscribe to.\n *\n * e.g. you don't have to use OnInit in the subsclass you cann also just\n * subscribe to this.onInit$.subscribe() in the constructor\n * it' also useful if you want to access @Input variables which get set\n * at in onInit lifecycle and not in the constructor, so:\n *\n * @Input() someVar;\n * constructor() {\n *   this.onInit$().subscribe(() => console.log(this.someVar));\n * }\n */\nexport abstract class BaseComponent implements OnDestroy, OnInit {\n  private onDestroy$ubject: ReplaySubject;\n  private onInit$ubject: ReplaySubject;\n\n  /**\n   * Emits when the angular component gets destroyed\n   */\n  onDestroy$: Observable;\n\n  /**\n   * Emits when the angular component gets initialized\n   */\n  onInit$: Observable;\n\n  constructor() {\n    this.onDestroy$ubject = new ReplaySubject(1);\n    this.onInit$ubject = new ReplaySubject(1);\n\n    this.onDestroy$ = this.onDestroy$ubject.asObservable();\n    this.onInit$ = this.onInit$ubject.asObservable();\n  }\n\n  ngOnInit() {\n    this.onInit$ubject.next(undefined);\n    this.onInit$ubject.complete();\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$ubject.next(undefined);\n    this.onDestroy$ubject.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlWithName.html":{"url":"interfaces/ControlWithName.html","title":"interface - ControlWithName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControlWithName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/helper/form.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        control\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                    \n                                \n                                \n                                    \n                                        control:     AbstractControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractControl, Form, FormControl, FormGroup } from \"@angular/forms\";\n\nfunction callFuncOnFormGroupAndChildren(formGroup: FormGroup, nameOfFunc: string) {\n  if (!formGroup.controls)\n    return;\n\n  Object.keys(formGroup.controls)\n    .map(formControlName => formGroup.controls[formControlName])\n    .forEach(control => {\n      if (control instanceof FormControl) {\n        control[nameOfFunc]();\n      } else if (control instanceof FormGroup) {\n        this.callFuncOnFormGroupAndChildren(control);\n      }\n    });\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as touched\n * @param formGroup The form group to mark as touched\n */\nexport function markFormGroupAsTouched(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsTouched');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as untouched\n * @param formGroup The form group to mark as untouched\n */\nexport function markFormGroupAsUntouched(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsUntouched');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as dirty\n * @param formGroup The form group to mark as untouched\n */\nexport function markFormGroupAsDirty(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsDirty');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as pristine\n * @param formGroup The form group to mark as pristine\n */\nexport function markFormGroupAsPristine(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsPristine');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as pending\n * @param formGroup The form group to mark as pending\n */\nexport function markFormGroupAsPending(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsPending');\n}\n\nexport interface ControlWithName {\n  control: AbstractControl;\n  name: string;\n}\n\n/**\n * get all dirty controls inside a form\n * @param form The form in which to check for dirty controls\n */\nexport function getDirtyControls(form: FormGroup): ControlWithName[] {\n  return Object.keys(form.controls)\n    .map(k => {control: form.controls[k], name: k})\n    .filter(c => c.control.dirty);\n}\n\nexport class FormHelper {\n  static markFormGroupAsTouched = markFormGroupAsTouched;\n  static getDirtyControls = getDirtyControls;\n  static markFormGroupAsUntouched = markFormGroupAsUntouched;\n  static markFormGroupAsDirty = markFormGroupAsDirty;\n  static markFormGroupAsPristine = markFormGroupAsPristine;\n  static markFormGroupAsPending = markFormGroupAsPending;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormHelper.html":{"url":"classes/FormHelper.html","title":"class - FormHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/helper/form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getDirtyControls\n                            \n                            \n                                    Static\n                                markFormGroupAsDirty\n                            \n                            \n                                    Static\n                                markFormGroupAsPending\n                            \n                            \n                                    Static\n                                markFormGroupAsPristine\n                            \n                            \n                                    Static\n                                markFormGroupAsTouched\n                            \n                            \n                                    Static\n                                markFormGroupAsUntouched\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getDirtyControls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getDirtyControls:     \n\n                    \n                \n                    \n                        \n                            Default value : getDirtyControls\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            markFormGroupAsDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markFormGroupAsDirty:     \n\n                    \n                \n                    \n                        \n                            Default value : markFormGroupAsDirty\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            markFormGroupAsPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markFormGroupAsPending:     \n\n                    \n                \n                    \n                        \n                            Default value : markFormGroupAsPending\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            markFormGroupAsPristine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markFormGroupAsPristine:     \n\n                    \n                \n                    \n                        \n                            Default value : markFormGroupAsPristine\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            markFormGroupAsTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markFormGroupAsTouched:     \n\n                    \n                \n                    \n                        \n                            Default value : markFormGroupAsTouched\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            markFormGroupAsUntouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markFormGroupAsUntouched:     \n\n                    \n                \n                    \n                        \n                            Default value : markFormGroupAsUntouched\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/form.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, Form, FormControl, FormGroup } from \"@angular/forms\";\n\nfunction callFuncOnFormGroupAndChildren(formGroup: FormGroup, nameOfFunc: string) {\n  if (!formGroup.controls)\n    return;\n\n  Object.keys(formGroup.controls)\n    .map(formControlName => formGroup.controls[formControlName])\n    .forEach(control => {\n      if (control instanceof FormControl) {\n        control[nameOfFunc]();\n      } else if (control instanceof FormGroup) {\n        this.callFuncOnFormGroupAndChildren(control);\n      }\n    });\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as touched\n * @param formGroup The form group to mark as touched\n */\nexport function markFormGroupAsTouched(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsTouched');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as untouched\n * @param formGroup The form group to mark as untouched\n */\nexport function markFormGroupAsUntouched(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsUntouched');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as dirty\n * @param formGroup The form group to mark as untouched\n */\nexport function markFormGroupAsDirty(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsDirty');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as pristine\n * @param formGroup The form group to mark as pristine\n */\nexport function markFormGroupAsPristine(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsPristine');\n}\n\n/**\n * marks the form and all it's children, including other formGroups or controls\n * as pending\n * @param formGroup The form group to mark as pending\n */\nexport function markFormGroupAsPending(formGroup: FormGroup) {\n  callFuncOnFormGroupAndChildren(formGroup, 'markAsPending');\n}\n\nexport interface ControlWithName {\n  control: AbstractControl;\n  name: string;\n}\n\n/**\n * get all dirty controls inside a form\n * @param form The form in which to check for dirty controls\n */\nexport function getDirtyControls(form: FormGroup): ControlWithName[] {\n  return Object.keys(form.controls)\n    .map(k => {control: form.controls[k], name: k})\n    .filter(c => c.control.dirty);\n}\n\nexport class FormHelper {\n  static markFormGroupAsTouched = markFormGroupAsTouched;\n  static getDirtyControls = getDirtyControls;\n  static markFormGroupAsUntouched = markFormGroupAsUntouched;\n  static markFormGroupAsDirty = markFormGroupAsDirty;\n  static markFormGroupAsPristine = markFormGroupAsPristine;\n  static markFormGroupAsPending = markFormGroupAsPending;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Helper.html":{"url":"classes/Helper.html","title":"class - Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/helper/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                form\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     \n\n                    \n                \n                    \n                        \n                            Default value : FormHelper\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/helper/index.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormHelper } from './form';\n\nexport class Helper {\n  static form = FormHelper;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PubSubData.html":{"url":"interfaces/PubSubData.html","title":"interface - PubSubData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PubSubData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        topic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topic\n                                    \n                                \n                                \n                                    \n                                        topic:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {map, filter} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\n\nexport interface PubSubData {\n  topic: any;\n  message: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Simple PubSub Service for communication between components and/or browser\n * tabs\n */\nexport class PubSubService {\n  private subject: Subject;\n  private static LOCALSTORAGE_KEY = '__crossTabCommunication';\n\n  constructor() {\n    this.subject = new Subject();\n\n    window.addEventListener('storage', (event: StorageEvent) => {\n\n      if (event.key !== PubSubService.LOCALSTORAGE_KEY)\n        return;\n\n      if (!event.newValue)\n        return;\n\n      const data: PubSubData = JSON.parse(event.newValue);\n      this.publish(data.topic, data.message);\n    });\n  }\n\n  /**\n   * Publish across browser tabs\n   * @param topic Name of the topic\n   * @param message The message of the topic\n   * @param includeSelf True if you want to publish also to the current\n   * active tab (defaults to false)\n   */\n  publishCrossTab(topic: any, message?: any, includeSelf = false) {\n    localStorage.setItem(PubSubService.LOCALSTORAGE_KEY, JSON.stringify({topic: topic, message: message}));\n\n    if (includeSelf)\n      this.publish(topic, message);\n  }\n\n  /**\n   * Publish a topic inside the current browser tab\n   * @param topic Name of the topic\n   * @param message Message of the topic\n   */\n  publish(topic: any, message?: any) {\n    this.subject.next({topic: topic, message: message});\n  }\n\n  /**\n   * Subscribe to a topics and receive messages\n   * @param topics One or more topics to listen to\n   */\n  topic(...topics: string[]): Observable {\n    return this.subject\n      .asObservable().pipe(\n        filter(data => topics.includes(data.topic)),\n        map(data => data.message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PubSubService.html":{"url":"injectables/PubSubService.html","title":"injectable - PubSubService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PubSubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                LOCALSTORAGE_KEY\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                            \n                                publishCrossTab\n                            \n                            \n                                topic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \npublish(topic: any, message?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Publish a topic inside the current browser tab\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        topic\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name of the topic\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Message of the topic\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishCrossTab\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishCrossTab(topic: any, message?: any, includeSelf)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Publish across browser tabs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        topic\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Name of the topic\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The message of the topic\n\n                                                        \n                                                \n                                                \n                                                        includeSelf\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                True if you want to publish also to the current\nactive tab (defaults to false)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topic\n                            \n                            \n                        \n                    \n                \n                \n                    \ntopic(...topics: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:64\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Subscribe to a topics and receive messages\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        topics\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                One or more topics to listen to\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            LOCALSTORAGE_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCALSTORAGE_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '__crossTabCommunication'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {map, filter} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\n\nexport interface PubSubData {\n  topic: any;\n  message: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Simple PubSub Service for communication between components and/or browser\n * tabs\n */\nexport class PubSubService {\n  private subject: Subject;\n  private static LOCALSTORAGE_KEY = '__crossTabCommunication';\n\n  constructor() {\n    this.subject = new Subject();\n\n    window.addEventListener('storage', (event: StorageEvent) => {\n\n      if (event.key !== PubSubService.LOCALSTORAGE_KEY)\n        return;\n\n      if (!event.newValue)\n        return;\n\n      const data: PubSubData = JSON.parse(event.newValue);\n      this.publish(data.topic, data.message);\n    });\n  }\n\n  /**\n   * Publish across browser tabs\n   * @param topic Name of the topic\n   * @param message The message of the topic\n   * @param includeSelf True if you want to publish also to the current\n   * active tab (defaults to false)\n   */\n  publishCrossTab(topic: any, message?: any, includeSelf = false) {\n    localStorage.setItem(PubSubService.LOCALSTORAGE_KEY, JSON.stringify({topic: topic, message: message}));\n\n    if (includeSelf)\n      this.publish(topic, message);\n  }\n\n  /**\n   * Publish a topic inside the current browser tab\n   * @param topic Name of the topic\n   * @param message Message of the topic\n   */\n  publish(topic: any, message?: any) {\n    this.subject.next({topic: topic, message: message});\n  }\n\n  /**\n   * Subscribe to a topics and receive messages\n   * @param topics One or more topics to listen to\n   */\n  topic(...topics: string[]): Observable {\n    return this.subject\n      .asObservable().pipe(\n        filter(data => topics.includes(data.topic)),\n        map(data => data.message));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwissArmyKnife.html":{"url":"classes/SwissArmyKnife.html","title":"class - SwissArmyKnife","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwissArmyKnife\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/public_api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BaseComponent\n                            \n                            \n                                    Static\n                                Helper\n                            \n                            \n                                    Static\n                                PubSubService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            BaseComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BaseComponent:     \n\n                    \n                \n                    \n                        \n                            Default value : BaseComponent\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/public_api.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Helper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Helper:     \n\n                    \n                \n                    \n                        \n                            Default value : Helper\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/public_api.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PubSubService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PubSubService:     \n\n                    \n                \n                    \n                        \n                            Default value : PubSubService\n                        \n                    \n                        \n                            \n                                    Defined in projects/ng-swiss-army-knife/src/public_api.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Helper } from './lib/helper';\nimport { PubSubService } from './lib/services/pub-sub.service';\nimport { BaseComponent } from './lib/classes/base.component';\n\nexport * from './lib/services/pub-sub.service';\nexport * from './lib/ng-swiss-army-knife.module';\nexport * from './lib/helper';\nexport * from './lib/classes/base.component';\n\nexport class SwissArmyKnife {\n  static Helper = Helper;\n  static PubSubService = PubSubService;\n  static BaseComponent = BaseComponent;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SwissArmyKnifeModule.html":{"url":"modules/SwissArmyKnifeModule.html","title":"module - SwissArmyKnifeModule","body":"\n                   \n\n\n\n\n    Modules\n    SwissArmyKnifeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ng-swiss-army-knife/src/lib/ng-swiss-army-knife.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class SwissArmyKnifeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/classes/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                class\n            \n            \n                FormHelper\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                interface\n            \n            \n                ControlWithName\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                callFuncOnFormGroupAndChildren\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                getDirtyControls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                markFormGroupAsDirty\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                markFormGroupAsPending\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                markFormGroupAsPristine\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                markFormGroupAsTouched\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/form.ts\n            \n            \n                function\n            \n            \n                markFormGroupAsUntouched\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/helper/index.ts\n            \n            \n                class\n            \n            \n                Helper\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts\n            \n            \n                injectable\n            \n            \n                PubSubService\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/lib/services/pub-sub.service.ts\n            \n            \n                interface\n            \n            \n                PubSubData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ng-swiss-army-knife/src/public_api.ts\n            \n            \n                class\n            \n            \n                SwissArmyKnife\n            \n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            callFuncOnFormGroupAndChildren   (projects/.../form.ts)\n                        \n                        \n                            getDirtyControls   (projects/.../form.ts)\n                        \n                        \n                            markFormGroupAsDirty   (projects/.../form.ts)\n                        \n                        \n                            markFormGroupAsPending   (projects/.../form.ts)\n                        \n                        \n                            markFormGroupAsPristine   (projects/.../form.ts)\n                        \n                        \n                            markFormGroupAsTouched   (projects/.../form.ts)\n                        \n                        \n                            markFormGroupAsUntouched   (projects/.../form.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng-swiss-army-knife/src/lib/helper/form.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            callFuncOnFormGroupAndChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallFuncOnFormGroupAndChildren(formGroup, nameOfFunc)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nameOfFunc\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDirtyControls\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDirtyControls(form)\n                    \n                \n\n\n\n\n                \n                    \n                            get all dirty controls inside a form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form in which to check for dirty controls\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markFormGroupAsDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkFormGroupAsDirty(formGroup)\n                    \n                \n\n\n\n\n                \n                    \n                            marks the form and all it's children, including other formGroups or controls\nas dirty\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form group to mark as untouched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markFormGroupAsPending\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkFormGroupAsPending(formGroup)\n                    \n                \n\n\n\n\n                \n                    \n                            marks the form and all it's children, including other formGroups or controls\nas pending\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form group to mark as pending\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markFormGroupAsPristine\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkFormGroupAsPristine(formGroup)\n                    \n                \n\n\n\n\n                \n                    \n                            marks the form and all it's children, including other formGroups or controls\nas pristine\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form group to mark as pristine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markFormGroupAsTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkFormGroupAsTouched(formGroup)\n                    \n                \n\n\n\n\n                \n                    \n                            marks the form and all it's children, including other formGroups or controls\nas touched\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form group to mark as touched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markFormGroupAsUntouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkFormGroupAsUntouched(formGroup)\n                    \n                \n\n\n\n\n                \n                    \n                            marks the form and all it's children, including other formGroups or controls\nas untouched\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The form group to mark as untouched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgSwissArmyKnife\nThis library provides common Tools, Helpers, Directives, Components, Services and Pipes\nthat are often used in different angular projects.\nSo it should be a swiss army knife for angular developers ;-D\nIf you find something missing or have suggestions please let me know.\nI work on different angular projects and will update this library frequently.\nInstallation\nrun  npm i ng-swiss-army-knife --save\nAPI\nClick here for the full documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SwissArmyKnifeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
